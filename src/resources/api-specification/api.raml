#%RAML 1.0
---
title: GR8DI Website API
baseUri: http://api.gr8di.com
version: v1
protocols: [HTTPS]
mediaType: application/json

securitySchemes:
  basicAuth: !include securitySchemes/Basic.raml

uses:
  types: !include libraries/types/types.raml

traits:
  pageable: !include traits/pageable.raml
  searchable: !include traits/searchable.raml
  sortable: !include traits/sortable.raml


/pages:
  /{language}:
    get:
      description: gets all pages
        responses:
          200:
            body:
              application/json:
                type: !include libraries/types/Page.raml
                example: !include examples/pages.json
          204:
            description: No Content
          400:
            body:
              application/json:
                type: !include libraries/types/error.raml
                example: !include examples/error.json

  /{id}:
    get:
    securedBy: basicAuth
      description: get a page by its id
        responses:
          200:
            body:
              application/json:
                type: !include libraries/types/Page.raml
                example: !include examples/page.json
          204:
            description: No Content
          400:
            body:
              application/json:
                type: !include libraries/types/error.raml
                example: !include examples/error.json

    put:
      securedBy: basicAuth
      description: Creates a new page
      body:
        type: !include libraries/types/Page.raml
        example: !include examples/Page.json
      responses:
        202:
          description: Accepted
        400:
          description: Bad Request.
          body:
            application/json:
              type: !include libraries/types/error.raml
              example: !include examples/error.json

    delete:
      securedBy: basicAuth
      description: Creates a new page
      body:
        type: !include libraries/types/Page.raml
        example: !include examples/Page.json
      responses:
        202:
          description: Accepted
        400:
          description: Bad Request.
          body:
            application/json:
              type: !include libraries/types/error.raml
              example: !include examples/error.json

  post:
    securedBy: basicAuth
    description: Creates a new page
    body:
      type: !include libraries/types/Page.raml
      example: !include examples/Page.json
    responses:
      202:
        description: Accepted
      400:
        description: Bad Request.
        body:
          application/json:
            type: !include libraries/types/error.raml
            example: !include examples/error.json

/messages:
    resourceTypes:
        collection:
            description: Contains all sets of messages
            get:
                description: gets all messages that match query parameter 
                queryParameters:
                    access_token:
                        description: "The access token provided by the authentication application"
                        example: AABBCCDD... 
                        required: true
                        type: string

                    senderEmail:
                        type: string
                        required: true
                        example: "jobs@awesome.io"
                    message:
                        type: string
                        required: true
                        example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec vehicula dolor, sit amet molestie ..."
                    topic:
                        type: string
                        required: true
                        example: "Neque porro quisquam"

                responses:
                        200:
                            body:
                                application/json: 
                                    example: |
                                        {
                                            "messages": [
                                                {
                                                    "messageId": "001",
                                                    "message": "Hello world"
                                                },
                                                {
                                                    "messageId": "002",
                                                    "message": "Great job"
                                                }
                                            ]
                                        }
            post:
                description: creates a new message 
                body:
                    application/json: 
                                type: message
                responses:
                    202:
                        body:
                            application/json: 
                                type: message
                                example: |
                                    {"message":"message has properly been entered..."}
               
	/{messageId}:
        collection-item:
            get:
                description: gets a particular message by its id
                    access_token:
                        description: "The access token provided by the authentication application"
                        example: AABBCCDD 
                        required: true
                        type: string
                responses:
                    200:
                        body:
                            application/json: 
                                example: |
                                    {
                                        "message": {
                                                "messageId": "001",
                                                "message": "Hello world"
                                            }
                                    }
                    404:
                        body:
                            application/json:
                                example:
                                    { 
                                        "status":"Not Found"
                                    }
            put:
            delete:




/jobs:
	description: Job entity
	get:
        description: Get all job posts
            queryParameters:
                access_token:
                    description: "The access token provided by the authentication application"
                    example: AABBCCDD 
                    required: true
                    type: string
                emailAddress:
                    example:"jobs@awesome.io"
                    type: string
                    required: true
                companyName:
                    example:"Awesome Inc"
                    type: string
                    required: false
                jobLocation:
                    example:"Remote"
                    type: string
                    required: false
                jobtitle:
                example: "Grails developer"
                    type: string
                    required: false
                jobExperienceLevel:
                    example: "entry level"
                    type: string
                    required: true
                jobType:
                    example: "part-time"
                    type: string
                    required: true
                tags:
                    example: "groovy, grails, backend"
                    type: string
                    required: false
                salaryrangeFrom:
                    type: float
                    required: true
                    example: "$1000"
                salaryrangeTo:
                    type: float
                    required: true
                    example: "$3000"
                jobDescription:
                    example: "As a grails developer for Awesome Inc your responsibilities will include..."
                    type: Long
                    required: true
	post:
	/{jobId}:
      get:
        description: Get a job with jobId = {jobId}
        body:
            application/json:
                type: message
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "message":"Job properly entered"
                            }

             404:
                body:
                        application/json:
                            example:
                                {
                                    "status":"Not Found"
                                }

      put:
      delete:

/reports:
  post:
    /{statsId}:
      get:
        description: displays the statistics for a particular page
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "stats": [
                      {
                        "statsId":"s5846d845"
                        "stats":"(statistics for a page)"
                      }
                    ]
                  }

          404:
            body:
              application/json:
                example:
                  {
                    "status":"Not Found"
                  }
put:
